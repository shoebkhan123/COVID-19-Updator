{"version":3,"sources":["components/Cards/Cards.module.css","components/Cards/Cards.jsx","api/index.js","components/Chart/Chart.jsx","components/CountryPicker/CountryPicker.jsx","app.js","index.js","App.module.css","components/Chart/Chart.module.css","components/CountryPicker/CountryPicker.module.css","images/crona-image.png"],"names":["module","exports","Cards","data","confirmed","recovered","deaths","lastUpdate","className","styles","container","Grid","spacing","justify","item","component","Card","xs","md","cx","card","infected","CardContent","Typography","color","gutterBottom","infectededColor","variant","start","end","value","duration","separator","Date","toDateString","recoveredColor","deathsColor","url","fetchData","country","a","changableUrl","axios","get","console","error","fetchDailyData","modifiedData","map","dailyData","total","date","reportDate","fetchCountries","countries","count","name","Chart","useState","setDailyData","useEffect","fetchAPI","lineChart","length","labels","datasets","label","borderColor","fill","backgroundColor","options","legend","display","title","text","barChart","direction","alignItems","CountryPicker","handelCountryChange","fetchedCountries","setFetchCountries","FormControl","formControl","NativeSelect","defaultValue","onChange","e","target","i","key","App","state","isNote","fetchedData","setState","this","image","src","CronaImage","alt","note","href","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.37e70fd8.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__3bjn6\",\"card\":\"Cards_card__eGUfZ\",\"infected\":\"Cards_infected__-adYp\",\"recovered\":\"Cards_recovered__1aizD\",\"deaths\":\"Cards_deaths__Qdjzq\",\"infectededColor\":\"Cards_infectededColor__3ztQU\",\"recoveredColor\":\"Cards_recoveredColor__2O_Zq\",\"deathsColor\":\"Cards_deathsColor__1wZ3y\"};","import React from 'react';\nimport {  Card, CardContent, Typography, Grid} from '@material-ui/core';\nimport CountUp from 'react-countup';\n\nimport cx from 'classnames'\nimport styles from './Cards.module.css'\n\nconst Cards = ( { data: { confirmed, recovered, deaths, lastUpdate } } ) => {\n\n\n    if(!confirmed) {\n        return 'Loading ...'\n    }\n    \n    return(\n        <div className = {styles.container}>\n            <Grid container spacing = {3} justify = \"center\">\n                <Grid item component = {Card} xs = {12} md = {3} className = { cx(styles.card, styles.infected) }>\n                    <CardContent>\n                        <Typography color = \"textSecondary\" gutterBottom> Infected </Typography>\n                        <Typography className = {styles.infectededColor} variant =\"h5\" gutterBottom>\n                            <CountUp\n                            start = {0}\n                            end = { confirmed.value }\n                            duration = {3.0}\n                            separator = ','\n                            />\n                         </Typography>\n                        <Typography color = \"textSecondary\">   { new Date(lastUpdate).toDateString() } </Typography>\n                        <Typography variant = \"body2\">  Number of active case of COVID-19 </Typography>\n                    </CardContent>\n                </Grid>\n\n                <Grid item  component = {Card} xs = {12} md = {3} className = { cx(styles.card, styles.recovered) }>\n                    <CardContent>\n                        <Typography color = \"textSecondary\"  gutterBottom> Recovered </Typography>\n                        <Typography  className = {styles.recoveredColor} variant =\"h5\" gutterBottom> \n                           <CountUp\n                            start = {0}\n                            end = { recovered.value }\n                            duration = {2.0}\n                            separator = ','\n                            />  </Typography>\n                        <Typography color = \"textSecondary\"> \n                      \n                        { new Date(lastUpdate).toDateString() }\n                         </Typography>\n                        <Typography variant = \"body2\">  Number of recoveries from COVID-19 </Typography>\n                    </CardContent>\n                </Grid>\n\n\n                <Grid item component = {Card} xs = {12} md = {3} className = { cx(styles.card, styles.deaths) }>\n                    <CardContent>\n                        <Typography color = \"textSecondary\" gutterBottom> Deaths </Typography>\n                        <Typography className = {styles.deathsColor} variant =\"h5\" gutterBottom> \n                        <CountUp\n                            start = {0}\n                            end = { deaths.value }\n                            duration = {1.0}\n                            separator = ','\n                            />\n                         </Typography>\n                        <Typography color = \"textSecondary\"> \n                            { new Date(lastUpdate).toDateString() }\n                         </Typography>\n                        <Typography variant = \"body2\">  Number of deaths case by COVID-19 </Typography>\n                    </CardContent>\n                </Grid>\n\n            </Grid>\n        </div>\n        \n    )\n}\n\nexport default Cards;","import axios from 'axios';\n\nconst url = 'https://covid19.mathdro.id/api';\n\nexport const fetchData = async (country) => {\n\n    let changableUrl = url;\n\n    if(country) {\n        changableUrl = `${url}/countries/${country}`\n    }\n\n\n    try {\n        const { data: { confirmed, recovered, deaths, lastUpdate } } = await axios.get(changableUrl);\n\n        return { confirmed, recovered, deaths, lastUpdate };\n    } catch (error) {\n        console.error(error)\n    }\n}\n\nexport const fetchDailyData = async () => {\n    try {\n        const { data } = await axios.get(`${url}/daily`);\n\n        const modifiedData = data.map((dailyData) => ({\n            confirmed: dailyData.confirmed.total,\n            deaths: dailyData.deaths.total,\n            date: dailyData.reportDate,\n        }))\n\n        return modifiedData\n\n    } catch (error) {\n        console.error(error)\n}\n\n}\n\n\nexport const fetchCountries = async () => {\n    try {\n        const { data: { countries } } = await axios.get(`${url}/countries`);\n        // console.log(JSON.stringify(response))\n        return countries.map((count) => count.name)\n    } catch (error) {\n        console.error(error)\n    }\n}","import React, { useState, useEffect } from 'react'\n\nimport { fetchDailyData } from '../../api';\n\nimport { Line, Bar } from 'react-chartjs-2';\n\nimport styles from './Chart.module.css'\n\nimport { Grid} from '@material-ui/core'\n\nconst Chart = ( { data: { confirmed, deaths, recovered }, country } ) => {\n\n    const [ dailyData, setDailyData ] = useState([]);\n\n    useEffect(() => {\n        const fetchAPI = async () => {\n             setDailyData(await fetchDailyData())\n        }\n        // console.log((dailyData))\n\n        fetchAPI();\n    }, []);\n\n    const lineChart =(\n        dailyData.length\n        ? (\n        <Line \n        data = {{\n            labels: dailyData.map(({date}) => date),\n            datasets: [{\n                data: dailyData.map(({ confirmed }) => confirmed),\n                label: 'Infected',\n                borderColor: '#3333ff',\n                fill: true\n\n            }, {\n                data: dailyData.map(({ deaths }) => deaths),\n                label: 'Deaths',\n                borderColor: 'red',\n                backgroundColor: 'rgba(255, 0, 0, 0.5)',\n                fill: true\n            }],\n        }}\n\n        options = {{\n            legend: { display: false },\n            title: {display: true, text: `Current state in ${country? country: 'Global'}`},\n        }}\n        />): null\n    )\n\n    const barChart = (\n        confirmed \n        ? (\n\n            <Bar \n                data = {{\n                    labels: ['Infected', 'Recovered', 'Deaths'],\n                    datasets: [{\n                        label: 'People',\n                        backgroundColor: [\n                            'rgb(0, 0, 255, 0.5)',\n                            'rgb(0, 255, 0, 0.5)',\n                            'rgb(255, 0, 0, 0.5)'\n                        ],\n                        data: [\n                           confirmed.value, recovered.value, deaths.value\n                        ]\n                    }]\n                }}\n\n                options = {{\n                    legend: { display: false },\n                    title: {display: true, text: `Current state in ${country? country: 'Global'}`},\n                    color: 'red'\n\n                    \n                }}\n\n            />\n\n        ): null\n    )\n\n    return(\n       <div  className = {styles.container}  xs = {12} md = {3} >\n\n\n<Grid className = {styles.container}\n  container\n  direction=\"row\"\n  justify=\"center\"\n  alignItems=\"center\"\n>\n           { country? barChart: lineChart }\n\n</Grid>\n\n <Grid className = {styles.container}\n  container \n  direction=\"row\"\n  justify=\"center\"\n  alignItems=\"center\"\n>\n           { country? null: barChart }\n\n</Grid> \n\n           \n           {/* <br />\n           <Container>\n           {  country ? null :  barChart }\n           </Container> */}\n       </div>\n    )\n}\n\nexport default Chart;","import React, { useState, useEffect } from 'react';\nimport { NativeSelect, FormControl } from '@material-ui/core';\n\nimport styles from './CountryPicker.module.css';\n\nimport { fetchCountries } from '../../api';\n\nconst CountryPicker = ( { handelCountryChange } ) => {\n\n    const [ fetchedCountries, setFetchCountries ] = useState([])\n\n    useEffect(() => {\n        const fetchAPI = async () => {\n            setFetchCountries(await fetchCountries())\n        }\n\n    \n\n        fetchAPI();\n     }, [setFetchCountries]);\n\n   \n\n  \n    //  console.log(JSON.stringify(fetchedCountries))\n\n    return(\n        <FormControl className = {styles.formControl}>\n            <NativeSelect defaultValue = '' onChange = {(e) => handelCountryChange(e.target.value) } >\n                <option value = ''> Global </option>\n                { fetchedCountries.map((country, i) => <option key = {i}  value = {country}> { country } </option> ) }\n            </NativeSelect>\n        {/* <div> { this.onChange() }  </div> */}\n        </FormControl>\n    )\n}\n\nexport default CountryPicker;","import React from 'react'\n\nimport { Cards, Chart, CountryPicker } from './components';\nimport styles from './App.module.css';\nimport { fetchData } from './api'\n\nimport CronaImage from'./images/crona-image.png';\n\nclass App extends React.Component {\n\n    state = {\n        data: {},\n        country: '',\n        isNote: false\n    }\n\n   async componentDidMount() {\n       const  fetchedData  = await fetchData(); \n       this.setState({ data: fetchedData });\n    }\n\n\n    handelCountryChange = async (country) => {\n        // console.log(country);\n\n        const  fetchedData  = await fetchData(country); \n\n        // console.log(fetchedData)\n\n        this.setState({data: fetchedData, country: country})\n\n        // fetch data\n        // set state\n    }\n\n    render() {\n\n        const { data, country } = this.state;\n\n        return(\n            <div>\n                <div className = {styles.container}>\n                <img className = {styles.image}  src = {CronaImage} alt = \"covid-19 updator\" />\n                <div className = {styles.note}> { this.setState.isNote? `Note: This site's data updated within 2 mins, please do refresh to see any changes...`: null  }   </div>\n                <Cards data = {data} />\n                <CountryPicker handelCountryChange = {this.handelCountryChange} />\n                <Chart data = {data} country = {country} />\n            </div>\n            <div className = {styles.title}> #COVID-19 Updator by <span> <a title = \"linkedin\" href = \"https://www.linkedin.com/in/shoeb-khan-a50584158/\" target = \"_blank\">Shoeb khan  </a>  </span>  </div>\n            </div>\n         \n        )\n    }\n}\n\nexport default App;","import React from 'react';\n\nimport ReactDOM from 'react-dom'\n\nimport App from './app'\n\n\nReactDOM.render(<App />, document.getElementById('root'))","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__1MQN3\",\"image\":\"App_image__3byI1\",\"note\":\"App_note__3pgJB\",\"title\":\"App_title__-GfWs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__1PIOn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__2p8f9\"};","module.exports = __webpack_public_path__ + \"static/media/crona-image.2b91ecb7.png\";"],"sourceRoot":""}